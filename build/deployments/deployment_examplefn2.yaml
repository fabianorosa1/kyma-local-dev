apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  annotations:
    function-size: XS
  labels:
    app: examplefn2
  name: examplefn2
  namespace: stage
spec:
  checksum: sha256:af6329138607b89cf91bcf6196de075796150f4fd7fa5676550ff9f2cd127e3e
  deployment:
    spec:
      template:
        spec:
          containers:
            - env:
                - name: myparameter
                  value: myvalue1new
              name: examplefn2
  deps: |
    {
      "name": "examplefn2",
      "main": "main.js",
      "version": "0.0.1",
      "license": "Unlicense",
      "dependencies": {
        "axios": "^0.18.1"
      },
      "buildParameters": {
        "function_size": "XS",
        "namespace": "stage"
      }
    }
  function: >
    const axios = require("axios");


    module.exports = {
      main: async function(event, context) {
        const ordNum = "00002005";
        const ordersUrl = process.env.GATEWAY_URL + "/electronics/orders/" + ordNum;
        console.log("sending test get to ", ordersUrl);
        const response = await axios.get(ordersUrl);
        console.log(JSON.stringify(response.data, null, 2));
        return response.data;
      }
    };
  function-content-type: text
  handler: handler.main
  horizontalPodAutoscaler:
    metadata:
      labels:
        function: examplefn2
      name: examplefn2
      namespace: stage
    spec:
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            targetAverageUtilization: 50
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1beta1
        kind: Deployment
        name: examplefn2
  runtime: nodejs8
  timeout: ""
