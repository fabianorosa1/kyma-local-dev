apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  annotations:
    function-size: XS
  labels:
    app: examplefn
  name: examplefn
  namespace: stage
spec:
  checksum: sha256:696459569542b1e76678222134e1d0bbc7cbe18aa997498f947819f127f61ad1
  deployment:
    spec:
      template:
        spec:
          containers:
            - env:
                - name: header1
                  value: testheader
                - name: param2
                  value: value2
              name: examplefn
  deps: >
    {
      "name": "examplefn",
      "main": "examplefn.js",
      "license": "Unlicense",
      "dependencies": {
        "axios": "^0.18.1"
      },
      "devDependencies": {
        "dotenv": "^8.2.0",
        "fs": "0.0.1-security",
        "json-parameterization": "^2.0.0",
        "yaml": "^1.7.2"
      },
      "scripts": {
        "deploymentYaml": "node -e 'require(\"./build/build\").deploymentYaml()'"
      },
      "buildParameters": {
        "function_trigger": "http",
        "function_size": "XS",
        "namespace": "stage",
        "buildAPI": true
      }
    }
  function: |
    const axios = require("axios");

    module.exports = {
      main: async function(event, context) {
        const Url = "https://httpbin.org/anything";
        console.log("sending test three get to ", Url);
        const { data: result } = await axios.get(Url, {
          params: { header1: process.env.header1 }
        });
        console.log(result);
        return result;
      }
    };
  function-content-type: text
  handler: handler.main
  horizontalPodAutoscaler:
    metadata:
      labels:
        function: examplefn
      name: examplefn
      namespace: stage
    spec:
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            targetAverageUtilization: 50
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1beta1
        kind: Deployment
        name: examplefn
  runtime: nodejs8
  timeout: ""
  topic: http
