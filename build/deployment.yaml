apiVersion: kubeless.io/v1beta1
kind: Function
metadata:
  annotations:
    function-size: XS
  labels:
    app: examplefn
  name: examplefn
  namespace: stage
spec:
  checksum: sha256:9cedcd331d90433e28ee44c5197c37d0583a3fbe938a25513e18090deafee607
  deployment:
    spec:
      template:
        spec:
          containers:
            - env:
                - name: header1
                  value: testheaderValue1
                - name: param2
                  value: value2
              name: examplefn
  deps: |
    {
      "name": "examplefn",
      "main": "main.js",
      "version": "0.0.1",
      "license": "Unlicense",
      "dependencies": {
        "axios": "^0.18.1"
      },
      "buildParameters": {
        "function_trigger": "http",
        "function_size": "XS",
        "namespace": "stage"
      }
    }
  function: |
    const axios = require("axios");

    module.exports = {
      main: async function(event, context) {
        console.log("env variable header1: ", process.env["header1"]);

        const Url = "https://httpbin.org/anything";
        console.log("sending an example get to ", Url);
        const { data: result } = await axios.get(Url, {
          params: { header1: process.env.header1 }
        });

        console.log(result);
        return result;
      }
    };
  function-content-type: text
  handler: handler.main
  horizontalPodAutoscaler:
    metadata:
      labels:
        function: examplefn
      name: examplefn
      namespace: stage
    spec:
      maxReplicas: 1
      metrics:
        - resource:
            name: cpu
            targetAverageUtilization: 50
          type: Resource
      minReplicas: 1
      scaleTargetRef:
        apiVersion: apps/v1beta1
        kind: Deployment
        name: examplefn
  runtime: nodejs8
  timeout: ""
  topic: http
